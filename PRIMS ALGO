#include<iostream>
using namespace std;

class adjmat{
    
    int w;
    int n;
    int adjgraph[10][10];
    public:
        adjmat()
        {
            cout<<"Enter the number of edges in the graph : ";
            cin>>n;
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    adjgraph[i][j]=0;
            
                }
            }
        }
        void create();
        void display();
        void prim();

};

void adjmat::create(){
    int ans;
    int sv;
    int ev;
    do{
    cout<<"Enter the starting vertex : ";
    cin>>sv;
    cout<<"Enter ending vertex : ";
    cin>>ev;
    cout<<"Enter weight between : ";
    cin>>w;
    adjgraph[sv][ev]=w;
    adjgraph[ev][sv]=w;
    cout<<"More edges ? ";
    cin>>ans;

    }while (ans==1);
}

void adjmat::display(){
    for(int i=0;i<n;i++){
        cout<<"\n";
        for(int j=0;j<n;j++){
            cout<<adjgraph[i][j]<<"\t";
        }
    }
}

void adjmat::prim(){
    int SV;
    
    int visited[n];
    
    for(int i=0;i<n;i++){
        visited[i]=0;
    }

    
    int v1,v2;
    int mincost=0;
    cout<<"Enter starting vertex : ";
    cin>>SV;
    visited[SV]=1;
    for(int k=1;k<(n-1);k++){
        int min=999;
        for(int i=0;i<n;i++){
            if(visited[i]==1){
                for(int j=0;j<n;j++){
                    if(visited[j]==0){
                        if((adjgraph[i][j]<min) && (adjgraph[i][j]!=0)){
                            min=adjgraph[i][j];
                            v1=i;
                            v2=j;
                        }                    
                        }
                }
            }
        }
        visited[v2]=1;
        mincost=mincost+adjgraph[v1][v2];
        cout<<"\n"<<v1<<"->"<<v2<<endl;
    }
    cout<<"\n Minimum cost is : "<<mincost;



}

int main(){
    adjmat a;
    a.create();
    a.display();
    a.prim();
    return 0;
}
